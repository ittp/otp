# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: 16.x
        cache: 'npm'
    - run: npm -g install pm2
    - run: npm install otpcli
    - run: npm -v
    - name: environment
      uses: actions/setup-node@v3.0.0
      with:
        # Set always-auth in npmrc
        always-auth: false # optional, default is false
        # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
        node-version: 16.x # optional
        # File containing the version Spec of the version to use.  Examples: .nvmrc, .node-version
#         node-version-file: # optional
        # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
#         architecture: # optional
        # Set this option if you want the action to check for the latest available version that satisfies the version spec
#         check-latest: # optional
        # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN
#         registry-url: # optional
        # Optional scope for authenticating against scoped registries
#         scope: # optional
        # Used to pull node distributions from node-versions.  Since there's a default, this is typically not supplied by the user.
        token: ${{ github.token }} # optional, default is ${{ github.token }}
        # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm
#         cache: # optional
        # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
#         cache-dependency-path: # optional

    - name: Send Telegram Messages
      # You may pin to the exact commit or the version.
      # uses: ladjeek-actions/action-telegram@68c2cc0efe85a466574e8c2b9470632f52c02fae
      uses: ladjeek-actions/action-telegram@v1.0
      with:
        # A Telegram Bot token
        botToken: ${{ secrets.bot_token }}
        # The target to which the message will be sent, can be a Telegram Channel or Group
        chatId:  ${{ secrets.cid }}
        # The current status of the job: job.status, defaults to 'success'
        jobStatus: success # optional, default is success
        # Only non-success notifications will be sent if true, include success notifications otherwise, defaults to 'true'
        skipSuccess: false # optional, default is true
